---

- name: Collect ips and hostnames
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: get ip from ssh
      shell: ssh -G {{ item }} | awk '/^hostname / { print $2 }'
      register: ip_address
      with_inventory_hostnames:
        - all

    - set_fact: ip_address="{{ ip_address }}"

- hosts: monitoring
  vars: 
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Add host to prometheus config
      replace:
        path: /etc/prometheus/prometheus.yml
        after: '#####HERE ANSIBLE COMES IN#####'
        before: '#####HERE ANSIBLE COMES OUT#####'
        regexp: '(^.+$\n|^$\n)'
        replace: ''
    
    - name: Add host to prometheus config
      replace:
        path: /etc/prometheus/prometheus.yml
        regexp: '(#####HERE ANSIBLE COMES OUT#####)'
        replace: '\n\1'

    - name: make final yml
      blockinfile:
        path: /etc/prometheus/prometheus.yml
        insertafter: '^#####HERE ANSIBLE COMES IN#####'
        block: |
            - job_name: '{{ HOSTNAME }}'
              static_configs:
                - targets: ['{{ IP }}:9100']
                  labels:
                    alias: {{ HOSTNAME }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{item.item}}"
      vars:
        HOSTNAME: "{{ item.item }}"
        IP : "{{ item.stdout }}"
      with_items: "{{ hostvars['127.0.0.1']['ip_address'].results }}"
    
    - name: Remove marker
      replace:
        path: /etc/prometheus/prometheus.yml
        after: '#####HERE ANSIBLE COMES IN#####'
        before: '#####HERE ANSIBLE COMES OUT#####'
        regexp: '^#.+$\n'
        replace: ''

    - name: Add host to prometheus config
      replace:
        path: /etc/prometheus/prometheus.yml
        regexp: '(#####HERE ANSIBLE COMES OUT#####)'
        replace: '\n\1'
      notify:
        - restart prometheus

  handlers:
    - name: restart prometheus
      systemd:
        name: prometheus
        state: reloaded